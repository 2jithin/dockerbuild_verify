def branchname = null
def userInput = true
pipeline {
    agent any
    options {
        timeout(time: 20, unit: 'MINUTES')
        buildDiscarder(logRotator(numToKeepStr: '10'))
        skipDefaultCheckout false
        skipStagesAfterUnstable()
    }
    stages {
        stage('build_image') {
            steps {
                script {
                    echo " = = = == = = = = = = Creating Docker Image = = = = = == = = = = ="
                    echo 'The Current username'
                    sh '${USER}'
                    echo "++ Completed ++"
                    git url: 'https://github.com/2jithin/dockerbuild_verify.git', branch: 'main'
                    //sh 'docker build -t apachehttpd/$BUILD_NUMBER -f Dockerfile-alphalinux .'
                    branchname = sh 'git branch'
                }
            }
        }
        stage('deploy') {
            //when { anyOf { branch 'main'; branch 'master' } }
                //changeRequest(target: 'main') 
                //branch 'main' 
            steps {
                script {
                    timeout(time: 30, unit: 'SECONDS') {
                        userInput = input(
                        id: 'Proceed1', message: 'Was this successful?', parameters: [
                        [$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'Please confirm you agree with this']
                        ])
                        // if (!userInput.Release) {
                        //     error('Deployment not approved!')
                        //     userInput = false
                        //     echo "Aborted by: [${user}]"
                        // } else {
                        //     echo "Deploying Docker"
                        //     //sh 'docker run -d --name apachectest -p 80:80 apache/$BUILD_NUMBER'   
                        // }
                        
                    }
                    // def approval = input message: 'Deploy to production?', parameters: [[$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Approve deployment to production?']]
                    // if (!approval) {
                    //     error('Deployment to production was not approved')
                    // } else if (approval) {
                    //     echo "Deploying Docker"
                    //     sh 'docker run -d --name apachectest -p 80:80 apache/$BUILD_NUMBER'                        
                    // }
                }
            }
        }
   
    }
}