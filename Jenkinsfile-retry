pipeline {
    agent any
    options {
        timeout(time: 20, unit: 'MINUTES')
        buildDiscarder(logRotator(numToKeepStr: '10'))
        skipDefaultCheckout false
    }
    stages {
        stage('displayDate') {
            steps {
                retry(2) {
                script {
                    //def datevar=$(sh 'date')
                    def datevar = sh(script: 'dat', returnStdout: true).trim()
                    echo "checking parallel script first stage ${datevar}" 
                    retry(2) {
                        sh 'echo "Hello User1"'
                    } // can use in catch (Exception e) block for retry the error   
                }
                }
            }
        
            
        }
        stage('displayDate_Insec') {
            steps {
                script {
                    def datevar = sh(script: 'date --date="1 sec ago"', returnStdout: true).trim()
                    echo "checking parallel script second stage ${datevar}"  
                }
            }
        }    

    }
}